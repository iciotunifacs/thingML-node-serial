import "SharedMessages.thingml"

thing ArduinoSensor includes LoggerMsgs, TimerMsgs 

{
	
	provided port gateway {
		sends pressure
	}
	
	required port clock {
		receives sample_clock
	}

	function initialize_sensors() do
		`ifxDps310_1.begin(Wire, 0x76);
  		 ifxDps310_2.begin(Wire, 0x77);
  		 ifxDps310_1.correctTemp();
  		 ifxDps310_2.correctTemp();`
	end
	
	
	function sample_pressure() do
		 var p1 : Long
		 var p2 : Long
		 
		 // Reading the temperature to enable the temperature compensation
		//  `int32_t temperature;
		//   ifxDps310_1.measureTempOnce(temperature, 3);`
		//  `ifxDps310_2.measureTempOnce(temperature, 3);`
		  
		//  `ifxDps310_1.measurePressureOnce(`&p1&`, 3);`
		//  `ifxDps310_2.measurePressureOnce(`&p2&`, 3);`
		 gateway!pressure(p1, p2)
	end
	
	statechart Main init SAMPLING {
		
		on entry initialize_sensors()
		
		state SAMPLING {

			internal event clock?sample_clock action sample_pressure() 
		}	
	}
}

protocol Serial @serializer "Binary";

configuration ArduinoSensor {
	instance sensor : ArduinoSensor
	
	connector sensor.clock over Timer
	connector sensor.gateway over Serial
}